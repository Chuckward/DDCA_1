|MAIN
clk => pll:pll0.inclk0
res_n => sync:sync0.data_in
color_change => sync:sync1.data_in
hsync_n <= textmode_controller_1c:textm_ctrl.hd
vsync_n <= textmode_controller_1c:textm_ctrl.vd
red[0] <= textmode_controller_1c:textm_ctrl.r[0]
red[1] <= textmode_controller_1c:textm_ctrl.r[1]
red[2] <= textmode_controller_1c:textm_ctrl.r[2]
red[3] <= textmode_controller_1c:textm_ctrl.r[3]
red[4] <= textmode_controller_1c:textm_ctrl.r[4]
red[5] <= textmode_controller_1c:textm_ctrl.r[5]
red[6] <= textmode_controller_1c:textm_ctrl.r[6]
red[7] <= textmode_controller_1c:textm_ctrl.r[7]
green[0] <= textmode_controller_1c:textm_ctrl.g[0]
green[1] <= textmode_controller_1c:textm_ctrl.g[1]
green[2] <= textmode_controller_1c:textm_ctrl.g[2]
green[3] <= textmode_controller_1c:textm_ctrl.g[3]
green[4] <= textmode_controller_1c:textm_ctrl.g[4]
green[5] <= textmode_controller_1c:textm_ctrl.g[5]
green[6] <= textmode_controller_1c:textm_ctrl.g[6]
green[7] <= textmode_controller_1c:textm_ctrl.g[7]
blue[0] <= textmode_controller_1c:textm_ctrl.b[0]
blue[1] <= textmode_controller_1c:textm_ctrl.b[1]
blue[2] <= textmode_controller_1c:textm_ctrl.b[2]
blue[3] <= textmode_controller_1c:textm_ctrl.b[3]
blue[4] <= textmode_controller_1c:textm_ctrl.b[4]
blue[5] <= textmode_controller_1c:textm_ctrl.b[5]
blue[6] <= textmode_controller_1c:textm_ctrl.b[6]
blue[7] <= textmode_controller_1c:textm_ctrl.b[7]
den <= textmode_controller_1c:textm_ctrl.den
vga_res_n_out <= textmode_controller_1c:textm_ctrl.grest
vga_clk_out <= pll:pll0.c0
seg_data[0] <= seven_segment_display:seven_segm_display.seg_data[0]
seg_data[1] <= seven_segment_display:seven_segm_display.seg_data[1]
seg_data[2] <= seven_segment_display:seven_segm_display.seg_data[2]
seg_data[3] <= seven_segment_display:seven_segm_display.seg_data[3]
seg_data[4] <= seven_segment_display:seven_segm_display.seg_data[4]
seg_data[5] <= seven_segment_display:seven_segm_display.seg_data[5]
seg_data[6] <= seven_segment_display:seven_segm_display.seg_data[6]
seg_data[7] <= seven_segment_display:seven_segm_display.seg_data[7]
seg_data[8] <= seven_segment_display:seven_segm_display.seg_data[8]
seg_data[9] <= seven_segment_display:seven_segm_display.seg_data[9]
seg_data[10] <= seven_segment_display:seven_segm_display.seg_data[10]
seg_data[11] <= seven_segment_display:seven_segm_display.seg_data[11]
seg_data[12] <= seven_segment_display:seven_segm_display.seg_data[12]
seg_data[13] <= seven_segment_display:seven_segm_display.seg_data[13]
ps2_keyboard_clk <> ps2_keyboard_controller:ps2_keyboard_ctrl.ps2_clk
ps2_keyboard_data <> ps2_keyboard_controller:ps2_keyboard_ctrl.ps2_data
rs232_tx <= rs232_controller:rs232.tx
rs232_rx => rs232_controller:rs232.rx


|MAIN|pll:pll0
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|MAIN|pll:pll0|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|MAIN|pll:pll0|altpll:altpll_component|pll_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|MAIN|sync:sync0
clk => sync[2].CLK
clk => sync[1].CLK
res_n => sync[2].PRESET
res_n => sync[1].PRESET
data_in => sync[1].DATAIN
data_out <= sync[2].DB_MAX_OUTPUT_PORT_TYPE


|MAIN|sync:sync1
clk => sync[2].CLK
clk => sync[1].CLK
res_n => sync[2].ACLR
res_n => sync[1].ACLR
data_in => sync[1].DATAIN
data_out <= sync[2].DB_MAX_OUTPUT_PORT_TYPE


|MAIN|ps2_keyboard_controller:ps2_keyboard_ctrl
clk => ps2_transceiver:ps2_transceiver_inst.clk
clk => data_internal[0].CLK
clk => data_internal[1].CLK
clk => data_internal[2].CLK
clk => data_internal[3].CLK
clk => data_internal[4].CLK
clk => data_internal[5].CLK
clk => data_internal[6].CLK
clk => data_internal[7].CLK
clk => new_data~reg0.CLK
clk => keyboard_state~1.DATAIN
res_n => ps2_transceiver:ps2_transceiver_inst.res_n
res_n => data_internal[0].ACLR
res_n => data_internal[1].ACLR
res_n => data_internal[2].ACLR
res_n => data_internal[3].ACLR
res_n => data_internal[4].ACLR
res_n => data_internal[5].ACLR
res_n => data_internal[6].ACLR
res_n => data_internal[7].ACLR
res_n => new_data~reg0.ACLR
res_n => keyboard_state~3.DATAIN
new_data <= new_data~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= data_internal[0].DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data_internal[1].DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data_internal[2].DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data_internal[3].DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data_internal[4].DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data_internal[5].DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data_internal[6].DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data_internal[7].DB_MAX_OUTPUT_PORT_TYPE
ps2_clk <> ps2_transceiver:ps2_transceiver_inst.ps2_clk
ps2_data <> ps2_transceiver:ps2_transceiver_inst.ps2_data


|MAIN|ps2_keyboard_controller:ps2_keyboard_ctrl|ps2_transceiver:ps2_transceiver_inst
clk => ps2_data_sync[2].CLK
clk => ps2_data_sync[1].CLK
clk => ps2_clk_sync[2].CLK
clk => ps2_clk_sync[1].CLK
clk => prepare_timeout2[0].CLK
clk => prepare_timeout2[1].CLK
clk => prepare_timeout2[2].CLK
clk => prepare_timeout2[3].CLK
clk => prepare_timeout2[4].CLK
clk => prepare_timeout2[5].CLK
clk => prepare_timeout2[6].CLK
clk => prepare_timeout2[7].CLK
clk => prepare_timeout1[0].CLK
clk => prepare_timeout1[1].CLK
clk => prepare_timeout1[2].CLK
clk => prepare_timeout1[3].CLK
clk => prepare_timeout1[4].CLK
clk => prepare_timeout1[5].CLK
clk => prepare_timeout1[6].CLK
clk => prepare_timeout1[7].CLK
clk => prepare_timeout1[8].CLK
clk => prepare_timeout1[9].CLK
clk => prepare_timeout1[10].CLK
clk => prepare_timeout1[11].CLK
clk => prepare_timeout1[12].CLK
clk => new_data~reg0.CLK
clk => parity.CLK
clk => output_data_internal[0].CLK
clk => output_data_internal[1].CLK
clk => output_data_internal[2].CLK
clk => output_data_internal[3].CLK
clk => output_data_internal[4].CLK
clk => output_data_internal[5].CLK
clk => output_data_internal[6].CLK
clk => output_data_internal[7].CLK
clk => ps2_data_hz.CLK
clk => ps2_data_internal.CLK
clk => ps2_clk_hz.CLK
clk => ps2_clk_internal.CLK
clk => ps2_clk_last.CLK
clk => ps2_transceiver_state~1.DATAIN
res_n => ps2_data_sync[2].PRESET
res_n => ps2_data_sync[1].PRESET
res_n => ps2_clk_sync[2].PRESET
res_n => ps2_clk_sync[1].PRESET
res_n => prepare_timeout2[0].ACLR
res_n => prepare_timeout2[1].ACLR
res_n => prepare_timeout2[2].ACLR
res_n => prepare_timeout2[3].ACLR
res_n => prepare_timeout2[4].ACLR
res_n => prepare_timeout2[5].ACLR
res_n => prepare_timeout2[6].ACLR
res_n => prepare_timeout2[7].ACLR
res_n => prepare_timeout1[0].ACLR
res_n => prepare_timeout1[1].ACLR
res_n => prepare_timeout1[2].ACLR
res_n => prepare_timeout1[3].ACLR
res_n => prepare_timeout1[4].ACLR
res_n => prepare_timeout1[5].ACLR
res_n => prepare_timeout1[6].ACLR
res_n => prepare_timeout1[7].ACLR
res_n => prepare_timeout1[8].ACLR
res_n => prepare_timeout1[9].ACLR
res_n => prepare_timeout1[10].ACLR
res_n => prepare_timeout1[11].ACLR
res_n => prepare_timeout1[12].ACLR
res_n => new_data~reg0.ACLR
res_n => parity.ACLR
res_n => output_data_internal[0].ACLR
res_n => output_data_internal[1].ACLR
res_n => output_data_internal[2].ACLR
res_n => output_data_internal[3].ACLR
res_n => output_data_internal[4].ACLR
res_n => output_data_internal[5].ACLR
res_n => output_data_internal[6].ACLR
res_n => output_data_internal[7].ACLR
res_n => ps2_data_hz.PRESET
res_n => ps2_data_internal.PRESET
res_n => ps2_clk_hz.PRESET
res_n => ps2_clk_internal.PRESET
res_n => ps2_clk_last.PRESET
res_n => ps2_transceiver_state~3.DATAIN
ps2_clk <> ps2_clk
ps2_data <> ps2_data
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
send_request => ps2_transceiver_state_next.OUTPUTSELECT
input_data[0] => parity_next.IN1
input_data[0] => Selector53.IN11
input_data[1] => parity_next.IN1
input_data[1] => Selector53.IN10
input_data[2] => parity_next.IN1
input_data[2] => Selector53.IN9
input_data[3] => parity_next.IN1
input_data[3] => Selector53.IN8
input_data[4] => parity_next.IN1
input_data[4] => Selector53.IN7
input_data[5] => parity_next.IN1
input_data[5] => Selector53.IN6
input_data[6] => parity_next.IN1
input_data[6] => Selector53.IN5
input_data[7] => parity_next.IN1
input_data[7] => Selector53.IN4
input_data_send_ok <= input_data_send_ok.DB_MAX_OUTPUT_PORT_TYPE
input_data_send_finished <= input_data_send_finished.DB_MAX_OUTPUT_PORT_TYPE
output_data[0] <= output_data_internal[0].DB_MAX_OUTPUT_PORT_TYPE
output_data[1] <= output_data_internal[1].DB_MAX_OUTPUT_PORT_TYPE
output_data[2] <= output_data_internal[2].DB_MAX_OUTPUT_PORT_TYPE
output_data[3] <= output_data_internal[3].DB_MAX_OUTPUT_PORT_TYPE
output_data[4] <= output_data_internal[4].DB_MAX_OUTPUT_PORT_TYPE
output_data[5] <= output_data_internal[5].DB_MAX_OUTPUT_PORT_TYPE
output_data[6] <= output_data_internal[6].DB_MAX_OUTPUT_PORT_TYPE
output_data[7] <= output_data_internal[7].DB_MAX_OUTPUT_PORT_TYPE
new_data <= new_data~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|ps2_ascii:ps2_ascii0
clk => rom_sync_1r:ascii_rom_inst.clk
clk => scancode_saved[0].CLK
clk => scancode_saved[1].CLK
clk => scancode_saved[2].CLK
clk => scancode_saved[3].CLK
clk => scancode_saved[4].CLK
clk => scancode_saved[5].CLK
clk => scancode_saved[6].CLK
clk => scancode_saved[7].CLK
clk => shift2.CLK
clk => shift1.CLK
clk => keyboard_state~1.DATAIN
res_n => scancode_saved[0].ACLR
res_n => scancode_saved[1].ACLR
res_n => scancode_saved[2].ACLR
res_n => scancode_saved[3].ACLR
res_n => scancode_saved[4].ACLR
res_n => scancode_saved[5].ACLR
res_n => scancode_saved[6].ACLR
res_n => scancode_saved[7].ACLR
res_n => shift2.ACLR
res_n => shift1.ACLR
res_n => keyboard_state~3.DATAIN
scancode[0] => Equal0.IN5
scancode[0] => Equal1.IN7
scancode[0] => Equal2.IN3
scancode[0] => Equal3.IN4
scancode[0] => scancode_saved[0].DATAIN
scancode[1] => Equal0.IN7
scancode[1] => Equal1.IN3
scancode[1] => Equal2.IN2
scancode[1] => Equal3.IN3
scancode[1] => scancode_saved[1].DATAIN
scancode[2] => Equal0.IN4
scancode[2] => Equal1.IN2
scancode[2] => Equal2.IN1
scancode[2] => Equal3.IN2
scancode[2] => scancode_saved[2].DATAIN
scancode[3] => Equal0.IN3
scancode[3] => Equal1.IN6
scancode[3] => Equal2.IN0
scancode[3] => Equal3.IN1
scancode[3] => scancode_saved[3].DATAIN
scancode[4] => Equal0.IN6
scancode[4] => Equal1.IN5
scancode[4] => Equal2.IN7
scancode[4] => Equal3.IN0
scancode[4] => scancode_saved[4].DATAIN
scancode[5] => Equal0.IN2
scancode[5] => Equal1.IN1
scancode[5] => Equal2.IN6
scancode[5] => Equal3.IN7
scancode[5] => scancode_saved[5].DATAIN
scancode[6] => Equal0.IN1
scancode[6] => Equal1.IN4
scancode[6] => Equal2.IN5
scancode[6] => Equal3.IN6
scancode[6] => scancode_saved[6].DATAIN
scancode[7] => Equal0.IN0
scancode[7] => Equal1.IN0
scancode[7] => Equal2.IN4
scancode[7] => Equal3.IN5
scancode[7] => scancode_saved[7].DATAIN
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
new_scancode => keyboard_state_next.OUTPUTSELECT
ascii[0] <= rom_sync_1r:ascii_rom_inst.data[0]
ascii[1] <= rom_sync_1r:ascii_rom_inst.data[1]
ascii[2] <= rom_sync_1r:ascii_rom_inst.data[2]
ascii[3] <= rom_sync_1r:ascii_rom_inst.data[3]
ascii[4] <= rom_sync_1r:ascii_rom_inst.data[4]
ascii[5] <= rom_sync_1r:ascii_rom_inst.data[5]
ascii[6] <= rom_sync_1r:ascii_rom_inst.data[6]
ascii[7] <= rom_sync_1r:ascii_rom_inst.data[7]
new_ascii <= Equal4.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|ps2_ascii:ps2_ascii0|rom_sync_1r:ascii_rom_inst
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
addr[0] => Mux0.IN1033
addr[0] => Mux1.IN1033
addr[0] => Mux2.IN1033
addr[0] => Mux3.IN1033
addr[0] => Mux4.IN1033
addr[0] => Mux5.IN1033
addr[0] => Mux6.IN1033
addr[0] => Mux7.IN1033
addr[1] => Mux0.IN1032
addr[1] => Mux1.IN1032
addr[1] => Mux2.IN1032
addr[1] => Mux3.IN1032
addr[1] => Mux4.IN1032
addr[1] => Mux5.IN1032
addr[1] => Mux6.IN1032
addr[1] => Mux7.IN1032
addr[2] => Mux0.IN1031
addr[2] => Mux1.IN1031
addr[2] => Mux2.IN1031
addr[2] => Mux3.IN1031
addr[2] => Mux4.IN1031
addr[2] => Mux5.IN1031
addr[2] => Mux6.IN1031
addr[2] => Mux7.IN1031
addr[3] => Mux0.IN1030
addr[3] => Mux1.IN1030
addr[3] => Mux2.IN1030
addr[3] => Mux3.IN1030
addr[3] => Mux4.IN1030
addr[3] => Mux5.IN1030
addr[3] => Mux6.IN1030
addr[3] => Mux7.IN1030
addr[4] => Mux0.IN1029
addr[4] => Mux1.IN1029
addr[4] => Mux2.IN1029
addr[4] => Mux3.IN1029
addr[4] => Mux4.IN1029
addr[4] => Mux5.IN1029
addr[4] => Mux6.IN1029
addr[4] => Mux7.IN1029
addr[5] => Mux0.IN1028
addr[5] => Mux1.IN1028
addr[5] => Mux2.IN1028
addr[5] => Mux3.IN1028
addr[5] => Mux4.IN1028
addr[5] => Mux5.IN1028
addr[5] => Mux6.IN1028
addr[5] => Mux7.IN1028
addr[6] => Mux0.IN1027
addr[6] => Mux1.IN1027
addr[6] => Mux2.IN1027
addr[6] => Mux3.IN1027
addr[6] => Mux4.IN1027
addr[6] => Mux5.IN1027
addr[6] => Mux6.IN1027
addr[6] => Mux7.IN1027
addr[7] => Mux0.IN1026
addr[7] => Mux1.IN1026
addr[7] => Mux2.IN1026
addr[7] => Mux3.IN1026
addr[7] => Mux4.IN1026
addr[7] => Mux5.IN1026
addr[7] => Mux6.IN1026
addr[7] => Mux7.IN1026
addr[8] => Mux0.IN1025
addr[8] => Mux1.IN1025
addr[8] => Mux2.IN1025
addr[8] => Mux3.IN1025
addr[8] => Mux4.IN1025
addr[8] => Mux5.IN1025
addr[8] => Mux6.IN1025
addr[8] => Mux7.IN1025
addr[9] => Mux0.IN1024
addr[9] => Mux1.IN1024
addr[9] => Mux2.IN1024
addr[9] => Mux3.IN1024
addr[9] => Mux4.IN1024
addr[9] => Mux5.IN1024
addr[9] => Mux6.IN1024
addr[9] => Mux7.IN1024
rd => data[0]~reg0.ENA
rd => data[1]~reg0.ENA
rd => data[2]~reg0.ENA
rd => data[3]~reg0.ENA
rd => data[4]~reg0.ENA
rd => data[5]~reg0.ENA
rd => data[6]~reg0.ENA
rd => data[7]~reg0.ENA
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|fifo_1c1r1w:fifo
clk => dp_ram_1c1r1w:memory_inst.clk
clk => empty_int.CLK
clk => full_int.CLK
clk => write_address[0].CLK
clk => write_address[1].CLK
clk => write_address[2].CLK
clk => write_address[3].CLK
clk => read_address[0].CLK
clk => read_address[1].CLK
clk => read_address[2].CLK
clk => read_address[3].CLK
res_n => empty_int.PRESET
res_n => full_int.ACLR
res_n => write_address[0].ACLR
res_n => write_address[1].ACLR
res_n => write_address[2].ACLR
res_n => write_address[3].ACLR
res_n => read_address[0].ACLR
res_n => read_address[1].ACLR
res_n => read_address[2].ACLR
res_n => read_address[3].ACLR
data_out1[0] <= dp_ram_1c1r1w:memory_inst.rdata1[0]
data_out1[1] <= dp_ram_1c1r1w:memory_inst.rdata1[1]
data_out1[2] <= dp_ram_1c1r1w:memory_inst.rdata1[2]
data_out1[3] <= dp_ram_1c1r1w:memory_inst.rdata1[3]
data_out1[4] <= dp_ram_1c1r1w:memory_inst.rdata1[4]
data_out1[5] <= dp_ram_1c1r1w:memory_inst.rdata1[5]
data_out1[6] <= dp_ram_1c1r1w:memory_inst.rdata1[6]
data_out1[7] <= dp_ram_1c1r1w:memory_inst.rdata1[7]
rd1 => rd_int.IN1
rd1 => full_next.OUTPUTSELECT
rd1 => empty_next.OUTPUTSELECT
data_in2[0] => dp_ram_1c1r1w:memory_inst.wdata2[0]
data_in2[1] => dp_ram_1c1r1w:memory_inst.wdata2[1]
data_in2[2] => dp_ram_1c1r1w:memory_inst.wdata2[2]
data_in2[3] => dp_ram_1c1r1w:memory_inst.wdata2[3]
data_in2[4] => dp_ram_1c1r1w:memory_inst.wdata2[4]
data_in2[5] => dp_ram_1c1r1w:memory_inst.wdata2[5]
data_in2[6] => dp_ram_1c1r1w:memory_inst.wdata2[6]
data_in2[7] => dp_ram_1c1r1w:memory_inst.wdata2[7]
wr2 => wr_int.IN1
wr2 => empty_next.OUTPUTSELECT
wr2 => full_next.OUTPUTSELECT
empty <= empty_int.DB_MAX_OUTPUT_PORT_TYPE
full <= full_int.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|fifo_1c1r1w:fifo|dp_ram_1c1r1w:memory_inst
clk => ram~12.CLK
clk => ram~0.CLK
clk => ram~1.CLK
clk => ram~2.CLK
clk => ram~3.CLK
clk => ram~4.CLK
clk => ram~5.CLK
clk => ram~6.CLK
clk => ram~7.CLK
clk => ram~8.CLK
clk => ram~9.CLK
clk => ram~10.CLK
clk => ram~11.CLK
clk => rdata1[0]~reg0.CLK
clk => rdata1[1]~reg0.CLK
clk => rdata1[2]~reg0.CLK
clk => rdata1[3]~reg0.CLK
clk => rdata1[4]~reg0.CLK
clk => rdata1[5]~reg0.CLK
clk => rdata1[6]~reg0.CLK
clk => rdata1[7]~reg0.CLK
clk => ram.CLK0
raddr1[0] => ram.RADDR
raddr1[1] => ram.RADDR1
raddr1[2] => ram.RADDR2
raddr1[3] => ram.RADDR3
rdata1[0] <= rdata1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[1] <= rdata1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[2] <= rdata1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[3] <= rdata1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[4] <= rdata1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[5] <= rdata1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[6] <= rdata1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[7] <= rdata1[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd1 => rdata1[0]~reg0.ENA
rd1 => rdata1[1]~reg0.ENA
rd1 => rdata1[2]~reg0.ENA
rd1 => rdata1[3]~reg0.ENA
rd1 => rdata1[4]~reg0.ENA
rd1 => rdata1[5]~reg0.ENA
rd1 => rdata1[6]~reg0.ENA
rd1 => rdata1[7]~reg0.ENA
waddr2[0] => ram~3.DATAIN
waddr2[0] => ram.WADDR
waddr2[1] => ram~2.DATAIN
waddr2[1] => ram.WADDR1
waddr2[2] => ram~1.DATAIN
waddr2[2] => ram.WADDR2
waddr2[3] => ram~0.DATAIN
waddr2[3] => ram.WADDR3
wdata2[0] => ram~11.DATAIN
wdata2[0] => ram.DATAIN
wdata2[1] => ram~10.DATAIN
wdata2[1] => ram.DATAIN1
wdata2[2] => ram~9.DATAIN
wdata2[2] => ram.DATAIN2
wdata2[3] => ram~8.DATAIN
wdata2[3] => ram.DATAIN3
wdata2[4] => ram~7.DATAIN
wdata2[4] => ram.DATAIN4
wdata2[5] => ram~6.DATAIN
wdata2[5] => ram.DATAIN5
wdata2[6] => ram~5.DATAIN
wdata2[6] => ram.DATAIN6
wdata2[7] => ram~4.DATAIN
wdata2[7] => ram.DATAIN7
wr2 => ram~12.DATAIN
wr2 => ram.WE


|MAIN|output_logic:output
clk => color_index[0].CLK
clk => color_index[1].CLK
clk => color_index[2].CLK
clk => color_index[3].CLK
clk => textmode_wr~reg0.CLK
clk => textmode_instruction_data[0]~reg0.CLK
clk => textmode_instruction_data[1]~reg0.CLK
clk => textmode_instruction_data[2]~reg0.CLK
clk => textmode_instruction_data[3]~reg0.CLK
clk => textmode_instruction_data[4]~reg0.CLK
clk => textmode_instruction_data[5]~reg0.CLK
clk => textmode_instruction_data[6]~reg0.CLK
clk => textmode_instruction_data[7]~reg0.CLK
clk => textmode_instruction_data[8]~reg0.CLK
clk => textmode_instruction_data[9]~reg0.CLK
clk => textmode_instruction_data[10]~reg0.CLK
clk => textmode_instruction_data[11]~reg0.CLK
clk => textmode_instruction_data[12]~reg0.CLK
clk => textmode_instruction_data[13]~reg0.CLK
clk => textmode_instruction_data[14]~reg0.CLK
clk => textmode_instruction_data[15]~reg0.CLK
clk => textmode_instruction[0]~reg0.CLK
clk => textmode_instruction[1]~reg0.CLK
clk => textmode_instruction[2]~reg0.CLK
clk => textmode_instruction[3]~reg0.CLK
clk => textmode_instruction[4]~reg0.CLK
clk => textmode_instruction[5]~reg0.CLK
clk => textmode_instruction[6]~reg0.CLK
clk => textmode_instruction[7]~reg0.CLK
clk => vga_state~1.DATAIN
res_n => color_index[0].ACLR
res_n => color_index[1].ACLR
res_n => color_index[2].ACLR
res_n => color_index[3].ACLR
res_n => textmode_wr~reg0.ACLR
res_n => textmode_instruction_data[0]~reg0.ACLR
res_n => textmode_instruction_data[1]~reg0.ACLR
res_n => textmode_instruction_data[2]~reg0.ACLR
res_n => textmode_instruction_data[3]~reg0.ACLR
res_n => textmode_instruction_data[4]~reg0.ACLR
res_n => textmode_instruction_data[5]~reg0.ACLR
res_n => textmode_instruction_data[6]~reg0.ACLR
res_n => textmode_instruction_data[7]~reg0.ACLR
res_n => textmode_instruction_data[8]~reg0.ACLR
res_n => textmode_instruction_data[9]~reg0.ACLR
res_n => textmode_instruction_data[10]~reg0.ACLR
res_n => textmode_instruction_data[11]~reg0.ACLR
res_n => textmode_instruction_data[12]~reg0.ACLR
res_n => textmode_instruction_data[13]~reg0.ACLR
res_n => textmode_instruction_data[14]~reg0.ACLR
res_n => textmode_instruction_data[15]~reg0.ACLR
res_n => textmode_instruction[0]~reg0.ACLR
res_n => textmode_instruction[1]~reg0.ACLR
res_n => textmode_instruction[2]~reg0.ACLR
res_n => textmode_instruction[3]~reg0.ACLR
res_n => textmode_instruction[4]~reg0.ACLR
res_n => textmode_instruction[5]~reg0.ACLR
res_n => textmode_instruction[6]~reg0.ACLR
res_n => textmode_instruction[7]~reg0.ACLR
res_n => vga_state~3.DATAIN
ascii[0] => Selector40.IN2
ascii[1] => Selector39.IN3
ascii[2] => Selector38.IN2
ascii[3] => Selector37.IN2
ascii[4] => Selector36.IN2
ascii[5] => Selector35.IN2
ascii[6] => Selector34.IN2
ascii[7] => Selector33.IN2
ascii_rd <= ascii_rd.DB_MAX_OUTPUT_PORT_TYPE
ascii_full => next_state.IN0
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
ascii_empty => vga_state_next.OUTPUTSELECT
rs232_data[0] => Selector40.IN3
rs232_data[1] => Selector39.IN4
rs232_data[2] => Selector38.IN3
rs232_data[3] => Selector37.IN3
rs232_data[4] => Selector36.IN3
rs232_data[5] => Selector35.IN3
rs232_data[6] => Selector34.IN3
rs232_data[7] => Selector33.IN3
rs232_rd <= rs232_rd.DB_MAX_OUTPUT_PORT_TYPE
rs232_full => next_state.IN1
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
rs232_empty => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
color_change => vga_state_next.OUTPUTSELECT
textmode_instruction[0] <= textmode_instruction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction[1] <= textmode_instruction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction[2] <= textmode_instruction[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction[3] <= textmode_instruction[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction[4] <= textmode_instruction[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction[5] <= textmode_instruction[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction[6] <= textmode_instruction[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction[7] <= textmode_instruction[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[0] <= textmode_instruction_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[1] <= textmode_instruction_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[2] <= textmode_instruction_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[3] <= textmode_instruction_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[4] <= textmode_instruction_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[5] <= textmode_instruction_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[6] <= textmode_instruction_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[7] <= textmode_instruction_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[8] <= textmode_instruction_data[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[9] <= textmode_instruction_data[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[10] <= textmode_instruction_data[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[11] <= textmode_instruction_data[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[12] <= textmode_instruction_data[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[13] <= textmode_instruction_data[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[14] <= textmode_instruction_data[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_instruction_data[15] <= textmode_instruction_data[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_busy => vga_state_next.OUTPUTSELECT
textmode_wr <= textmode_wr~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|textmode_controller_1c:textm_ctrl
clk => textmode_controller_fsm:controller.clk
clk => video_ram:video_ram_inst.clk
clk => font_rom:font_rom_inst.vga_clk
clk => display_controller:display_controller_inst.clk
clk => cursor_controller:cursor_controller_inst.clk
res_n => textmode_controller_fsm:controller.res_n
res_n => display_controller:display_controller_inst.res_n
res_n => cursor_controller:cursor_controller_inst.res_n
wr => textmode_controller_fsm:controller.wr
busy <= textmode_controller_fsm:controller.busy
instr[0] => textmode_controller_fsm:controller.instr[0]
instr[1] => textmode_controller_fsm:controller.instr[1]
instr[2] => textmode_controller_fsm:controller.instr[2]
instr[3] => textmode_controller_fsm:controller.instr[3]
instr[4] => textmode_controller_fsm:controller.instr[4]
instr[5] => textmode_controller_fsm:controller.instr[5]
instr[6] => textmode_controller_fsm:controller.instr[6]
instr[7] => textmode_controller_fsm:controller.instr[7]
instr_data[0] => textmode_controller_fsm:controller.instr_data[0]
instr_data[1] => textmode_controller_fsm:controller.instr_data[1]
instr_data[2] => textmode_controller_fsm:controller.instr_data[2]
instr_data[3] => textmode_controller_fsm:controller.instr_data[3]
instr_data[4] => textmode_controller_fsm:controller.instr_data[4]
instr_data[5] => textmode_controller_fsm:controller.instr_data[5]
instr_data[6] => textmode_controller_fsm:controller.instr_data[6]
instr_data[7] => textmode_controller_fsm:controller.instr_data[7]
instr_data[8] => textmode_controller_fsm:controller.instr_data[8]
instr_data[9] => textmode_controller_fsm:controller.instr_data[9]
instr_data[10] => textmode_controller_fsm:controller.instr_data[10]
instr_data[11] => textmode_controller_fsm:controller.instr_data[11]
instr_data[12] => textmode_controller_fsm:controller.instr_data[12]
instr_data[13] => textmode_controller_fsm:controller.instr_data[13]
instr_data[14] => textmode_controller_fsm:controller.instr_data[14]
instr_data[15] => textmode_controller_fsm:controller.instr_data[15]
hd <= display_controller:display_controller_inst.hd
vd <= display_controller:display_controller_inst.vd
den <= display_controller:display_controller_inst.den
r[0] <= display_controller:display_controller_inst.r[0]
r[1] <= display_controller:display_controller_inst.r[1]
r[2] <= display_controller:display_controller_inst.r[2]
r[3] <= display_controller:display_controller_inst.r[3]
r[4] <= display_controller:display_controller_inst.r[4]
r[5] <= display_controller:display_controller_inst.r[5]
r[6] <= display_controller:display_controller_inst.r[6]
r[7] <= display_controller:display_controller_inst.r[7]
g[0] <= display_controller:display_controller_inst.g[0]
g[1] <= display_controller:display_controller_inst.g[1]
g[2] <= display_controller:display_controller_inst.g[2]
g[3] <= display_controller:display_controller_inst.g[3]
g[4] <= display_controller:display_controller_inst.g[4]
g[5] <= display_controller:display_controller_inst.g[5]
g[6] <= display_controller:display_controller_inst.g[6]
g[7] <= display_controller:display_controller_inst.g[7]
b[0] <= display_controller:display_controller_inst.b[0]
b[1] <= display_controller:display_controller_inst.b[1]
b[2] <= display_controller:display_controller_inst.b[2]
b[3] <= display_controller:display_controller_inst.b[3]
b[4] <= display_controller:display_controller_inst.b[4]
b[5] <= display_controller:display_controller_inst.b[5]
b[6] <= display_controller:display_controller_inst.b[6]
b[7] <= display_controller:display_controller_inst.b[7]
grest <= display_controller:display_controller_inst.grest


|MAIN|textmode_controller_1c:textm_ctrl|textmode_controller_fsm:controller
clk => instr_data_buffer[0].CLK
clk => instr_data_buffer[1].CLK
clk => instr_data_buffer[2].CLK
clk => instr_data_buffer[3].CLK
clk => instr_data_buffer[4].CLK
clk => instr_data_buffer[5].CLK
clk => instr_data_buffer[6].CLK
clk => instr_data_buffer[7].CLK
clk => instr_data_buffer[8].CLK
clk => instr_data_buffer[9].CLK
clk => instr_data_buffer[10].CLK
clk => instr_data_buffer[11].CLK
clk => instr_data_buffer[12].CLK
clk => instr_data_buffer[13].CLK
clk => instr_data_buffer[14].CLK
clk => instr_data_buffer[15].CLK
clk => sig_cursor_color[0].CLK
clk => sig_cursor_color[1].CLK
clk => sig_cursor_color[2].CLK
clk => sig_cursor_color[3].CLK
clk => sig_scroll_offset[0].CLK
clk => sig_scroll_offset[1].CLK
clk => sig_scroll_offset[2].CLK
clk => sig_scroll_offset[3].CLK
clk => sig_scroll_offset[4].CLK
clk => cfg_register[0].CLK
clk => cfg_register[1].CLK
clk => cfg_register[2].CLK
clk => cfg_register[3].CLK
clk => y_cursor[0].CLK
clk => y_cursor[1].CLK
clk => y_cursor[2].CLK
clk => y_cursor[3].CLK
clk => y_cursor[4].CLK
clk => x_cursor[0].CLK
clk => x_cursor[1].CLK
clk => x_cursor[2].CLK
clk => x_cursor[3].CLK
clk => x_cursor[4].CLK
clk => x_cursor[5].CLK
clk => x_cursor[6].CLK
clk => textmode_controller_state~1.DATAIN
res_n => instr_data_buffer[0].ACLR
res_n => instr_data_buffer[1].ACLR
res_n => instr_data_buffer[2].ACLR
res_n => instr_data_buffer[3].ACLR
res_n => instr_data_buffer[4].ACLR
res_n => instr_data_buffer[5].ACLR
res_n => instr_data_buffer[6].ACLR
res_n => instr_data_buffer[7].ACLR
res_n => instr_data_buffer[8].ACLR
res_n => instr_data_buffer[9].ACLR
res_n => instr_data_buffer[10].ACLR
res_n => instr_data_buffer[11].ACLR
res_n => instr_data_buffer[12].ACLR
res_n => instr_data_buffer[13].ACLR
res_n => instr_data_buffer[14].ACLR
res_n => instr_data_buffer[15].ACLR
res_n => sig_cursor_color[0].ACLR
res_n => sig_cursor_color[1].PRESET
res_n => sig_cursor_color[2].ACLR
res_n => sig_cursor_color[3].PRESET
res_n => sig_scroll_offset[0].ACLR
res_n => sig_scroll_offset[1].ACLR
res_n => sig_scroll_offset[2].ACLR
res_n => sig_scroll_offset[3].ACLR
res_n => sig_scroll_offset[4].ACLR
res_n => cfg_register[0].PRESET
res_n => cfg_register[1].PRESET
res_n => cfg_register[2].ACLR
res_n => cfg_register[3].ACLR
res_n => y_cursor[0].ACLR
res_n => y_cursor[1].ACLR
res_n => y_cursor[2].ACLR
res_n => y_cursor[3].ACLR
res_n => y_cursor[4].ACLR
res_n => x_cursor[0].ACLR
res_n => x_cursor[1].ACLR
res_n => x_cursor[2].ACLR
res_n => x_cursor[3].ACLR
res_n => x_cursor[4].ACLR
res_n => x_cursor[5].ACLR
res_n => x_cursor[6].ACLR
res_n => textmode_controller_state~3.DATAIN
wr => textmode_controller_state_next.OUTPUTSELECT
wr => textmode_controller_state_next.OUTPUTSELECT
wr => textmode_controller_state_next.OUTPUTSELECT
wr => textmode_controller_state_next.OUTPUTSELECT
wr => textmode_controller_state_next.OUTPUTSELECT
wr => textmode_controller_state_next.OUTPUTSELECT
wr => textmode_controller_state_next.OUTPUTSELECT
wr => textmode_controller_state_next.OUTPUTSELECT
wr => textmode_controller_state_next.OUTPUTSELECT
wr => textmode_controller_state_next.OUTPUTSELECT
wr => textmode_controller_state_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
wr => instr_data_buffer_next.OUTPUTSELECT
busy <= busy.DB_MAX_OUTPUT_PORT_TYPE
instr[0] => Mux1.IN15
instr[0] => Mux2.IN15
instr[0] => Mux3.IN15
instr[0] => Mux5.IN15
instr[0] => Mux6.IN15
instr[0] => Mux8.IN15
instr[0] => Mux9.IN15
instr[0] => Mux10.IN15
instr[1] => Mux1.IN14
instr[1] => Mux2.IN14
instr[1] => Mux3.IN14
instr[1] => Mux5.IN14
instr[1] => Mux6.IN14
instr[1] => Mux8.IN14
instr[1] => Mux9.IN14
instr[1] => Mux10.IN14
instr[2] => Mux1.IN13
instr[2] => Mux2.IN13
instr[2] => Mux3.IN13
instr[2] => Mux5.IN13
instr[2] => Mux6.IN13
instr[2] => Mux8.IN13
instr[2] => Mux9.IN13
instr[2] => Mux10.IN13
instr[3] => Mux0.IN5
instr[3] => Mux1.IN12
instr[3] => Mux2.IN12
instr[3] => Mux3.IN12
instr[3] => Mux4.IN5
instr[3] => Mux5.IN12
instr[3] => Mux6.IN12
instr[3] => Mux7.IN5
instr[3] => Mux8.IN12
instr[3] => Mux9.IN12
instr[3] => Mux10.IN12
instr[4] => Mux0.IN4
instr[4] => Mux1.IN11
instr[4] => Mux2.IN11
instr[4] => Mux3.IN11
instr[4] => Mux4.IN4
instr[4] => Mux5.IN11
instr[4] => Mux6.IN11
instr[4] => Mux7.IN4
instr[4] => Mux8.IN11
instr[4] => Mux9.IN11
instr[4] => Mux10.IN11
instr[5] => Mux0.IN3
instr[5] => Mux1.IN10
instr[5] => Mux2.IN10
instr[5] => Mux3.IN10
instr[5] => Mux4.IN3
instr[5] => Mux5.IN10
instr[5] => Mux6.IN10
instr[5] => Mux7.IN3
instr[5] => Mux8.IN10
instr[5] => Mux9.IN10
instr[5] => Mux10.IN10
instr[6] => Mux0.IN2
instr[6] => Mux1.IN9
instr[6] => Mux2.IN9
instr[6] => Mux3.IN9
instr[6] => Mux4.IN2
instr[6] => Mux5.IN9
instr[6] => Mux6.IN9
instr[6] => Mux7.IN2
instr[6] => Mux8.IN9
instr[6] => Mux9.IN9
instr[6] => Mux10.IN9
instr[7] => Mux0.IN1
instr[7] => Mux1.IN8
instr[7] => Mux2.IN8
instr[7] => Mux3.IN8
instr[7] => Mux4.IN1
instr[7] => Mux5.IN8
instr[7] => Mux6.IN8
instr[7] => Mux7.IN1
instr[7] => Mux8.IN8
instr[7] => Mux9.IN8
instr[7] => Mux10.IN8
instr_data[0] => Equal0.IN15
instr_data[0] => Equal1.IN15
instr_data[0] => Equal2.IN15
instr_data[0] => instr_data_buffer_next.DATAB
instr_data[1] => Equal0.IN14
instr_data[1] => Equal1.IN14
instr_data[1] => Equal2.IN14
instr_data[1] => instr_data_buffer_next.DATAB
instr_data[2] => Equal0.IN13
instr_data[2] => Equal1.IN13
instr_data[2] => Equal2.IN13
instr_data[2] => instr_data_buffer_next.DATAB
instr_data[3] => Equal0.IN12
instr_data[3] => Equal1.IN12
instr_data[3] => Equal2.IN12
instr_data[3] => instr_data_buffer_next.DATAB
instr_data[4] => Equal0.IN11
instr_data[4] => Equal1.IN11
instr_data[4] => Equal2.IN11
instr_data[4] => instr_data_buffer_next.DATAB
instr_data[5] => Equal0.IN10
instr_data[5] => Equal1.IN10
instr_data[5] => Equal2.IN10
instr_data[5] => instr_data_buffer_next.DATAB
instr_data[6] => Equal0.IN9
instr_data[6] => Equal1.IN9
instr_data[6] => Equal2.IN9
instr_data[6] => instr_data_buffer_next.DATAB
instr_data[7] => Equal0.IN8
instr_data[7] => Equal1.IN8
instr_data[7] => Equal2.IN8
instr_data[7] => instr_data_buffer_next.DATAB
instr_data[8] => instr_data_buffer_next.DATAB
instr_data[9] => instr_data_buffer_next.DATAB
instr_data[10] => instr_data_buffer_next.DATAB
instr_data[11] => instr_data_buffer_next.DATAB
instr_data[12] => instr_data_buffer_next.DATAB
instr_data[13] => instr_data_buffer_next.DATAB
instr_data[14] => instr_data_buffer_next.DATAB
instr_data[15] => instr_data_buffer_next.DATAB
scroll_offset[0] <= sig_scroll_offset[0].DB_MAX_OUTPUT_PORT_TYPE
scroll_offset[1] <= sig_scroll_offset[1].DB_MAX_OUTPUT_PORT_TYPE
scroll_offset[2] <= sig_scroll_offset[2].DB_MAX_OUTPUT_PORT_TYPE
scroll_offset[3] <= sig_scroll_offset[3].DB_MAX_OUTPUT_PORT_TYPE
scroll_offset[4] <= sig_scroll_offset[4].DB_MAX_OUTPUT_PORT_TYPE
cursor_position_row[0] <= y_cursor[0].DB_MAX_OUTPUT_PORT_TYPE
cursor_position_row[1] <= y_cursor[1].DB_MAX_OUTPUT_PORT_TYPE
cursor_position_row[2] <= y_cursor[2].DB_MAX_OUTPUT_PORT_TYPE
cursor_position_row[3] <= y_cursor[3].DB_MAX_OUTPUT_PORT_TYPE
cursor_position_row[4] <= y_cursor[4].DB_MAX_OUTPUT_PORT_TYPE
cursor_position_colum[0] <= x_cursor[0].DB_MAX_OUTPUT_PORT_TYPE
cursor_position_colum[1] <= x_cursor[1].DB_MAX_OUTPUT_PORT_TYPE
cursor_position_colum[2] <= x_cursor[2].DB_MAX_OUTPUT_PORT_TYPE
cursor_position_colum[3] <= x_cursor[3].DB_MAX_OUTPUT_PORT_TYPE
cursor_position_colum[4] <= x_cursor[4].DB_MAX_OUTPUT_PORT_TYPE
cursor_position_colum[5] <= x_cursor[5].DB_MAX_OUTPUT_PORT_TYPE
cursor_position_colum[6] <= x_cursor[6].DB_MAX_OUTPUT_PORT_TYPE
cursor_color[0] <= sig_cursor_color[0].DB_MAX_OUTPUT_PORT_TYPE
cursor_color[1] <= sig_cursor_color[1].DB_MAX_OUTPUT_PORT_TYPE
cursor_color[2] <= sig_cursor_color[2].DB_MAX_OUTPUT_PORT_TYPE
cursor_color[3] <= sig_cursor_color[3].DB_MAX_OUTPUT_PORT_TYPE
cursor_state[0] <= cfg_register[0].DB_MAX_OUTPUT_PORT_TYPE
cursor_state[1] <= cfg_register[1].DB_MAX_OUTPUT_PORT_TYPE
video_ram_addr[0] <= video_ram_addr.DB_MAX_OUTPUT_PORT_TYPE
video_ram_addr[1] <= video_ram_addr.DB_MAX_OUTPUT_PORT_TYPE
video_ram_addr[2] <= video_ram_addr.DB_MAX_OUTPUT_PORT_TYPE
video_ram_addr[3] <= video_ram_addr.DB_MAX_OUTPUT_PORT_TYPE
video_ram_addr[4] <= video_ram_addr.DB_MAX_OUTPUT_PORT_TYPE
video_ram_addr[5] <= video_ram_addr.DB_MAX_OUTPUT_PORT_TYPE
video_ram_addr[6] <= video_ram_addr.DB_MAX_OUTPUT_PORT_TYPE
video_ram_addr[7] <= video_ram_addr.DB_MAX_OUTPUT_PORT_TYPE
video_ram_addr[8] <= video_ram_addr.DB_MAX_OUTPUT_PORT_TYPE
video_ram_addr[9] <= video_ram_addr.DB_MAX_OUTPUT_PORT_TYPE
video_ram_addr[10] <= video_ram_addr.DB_MAX_OUTPUT_PORT_TYPE
video_ram_addr[11] <= video_ram_addr.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[0] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[1] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[2] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[3] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[4] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[5] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[6] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[7] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[8] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[9] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[10] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[11] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[12] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[13] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[14] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_data[15] <= video_ram_data.DB_MAX_OUTPUT_PORT_TYPE
video_ram_wr <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|textmode_controller_1c:textm_ctrl|video_ram:video_ram_inst
clk => ram~28.CLK
clk => ram~0.CLK
clk => ram~1.CLK
clk => ram~2.CLK
clk => ram~3.CLK
clk => ram~4.CLK
clk => ram~5.CLK
clk => ram~6.CLK
clk => ram~7.CLK
clk => ram~8.CLK
clk => ram~9.CLK
clk => ram~10.CLK
clk => ram~11.CLK
clk => ram~12.CLK
clk => ram~13.CLK
clk => ram~14.CLK
clk => ram~15.CLK
clk => ram~16.CLK
clk => ram~17.CLK
clk => ram~18.CLK
clk => ram~19.CLK
clk => ram~20.CLK
clk => ram~21.CLK
clk => ram~22.CLK
clk => ram~23.CLK
clk => ram~24.CLK
clk => ram~25.CLK
clk => ram~26.CLK
clk => ram~27.CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_out[8]~reg0.CLK
clk => data_out[9]~reg0.CLK
clk => data_out[10]~reg0.CLK
clk => data_out[11]~reg0.CLK
clk => data_out[12]~reg0.CLK
clk => data_out[13]~reg0.CLK
clk => data_out[14]~reg0.CLK
clk => data_out[15]~reg0.CLK
clk => ram.CLK0
data_in[0] => ram~27.DATAIN
data_in[0] => ram.DATAIN
data_in[1] => ram~26.DATAIN
data_in[1] => ram.DATAIN1
data_in[2] => ram~25.DATAIN
data_in[2] => ram.DATAIN2
data_in[3] => ram~24.DATAIN
data_in[3] => ram.DATAIN3
data_in[4] => ram~23.DATAIN
data_in[4] => ram.DATAIN4
data_in[5] => ram~22.DATAIN
data_in[5] => ram.DATAIN5
data_in[6] => ram~21.DATAIN
data_in[6] => ram.DATAIN6
data_in[7] => ram~20.DATAIN
data_in[7] => ram.DATAIN7
data_in[8] => ram~19.DATAIN
data_in[8] => ram.DATAIN8
data_in[9] => ram~18.DATAIN
data_in[9] => ram.DATAIN9
data_in[10] => ram~17.DATAIN
data_in[10] => ram.DATAIN10
data_in[11] => ram~16.DATAIN
data_in[11] => ram.DATAIN11
data_in[12] => ram~15.DATAIN
data_in[12] => ram.DATAIN12
data_in[13] => ram~14.DATAIN
data_in[13] => ram.DATAIN13
data_in[14] => ram~13.DATAIN
data_in[14] => ram.DATAIN14
data_in[15] => ram~12.DATAIN
data_in[15] => ram.DATAIN15
addr_wr[0] => Add0.IN5
addr_wr[1] => Add0.IN4
addr_wr[2] => Add0.IN3
addr_wr[3] => Add0.IN2
addr_wr[4] => Add0.IN1
addr_wr[5] => ram~6.DATAIN
addr_wr[5] => ram.WADDR5
addr_wr[6] => ram~5.DATAIN
addr_wr[6] => ram.WADDR6
addr_wr[7] => ram~4.DATAIN
addr_wr[7] => ram.WADDR7
addr_wr[8] => ram~3.DATAIN
addr_wr[8] => ram.WADDR8
addr_wr[9] => ram~2.DATAIN
addr_wr[9] => ram.WADDR9
addr_wr[10] => ram~1.DATAIN
addr_wr[10] => ram.WADDR10
addr_wr[11] => ram~0.DATAIN
addr_wr[11] => ram.WADDR11
wr => ram~28.DATAIN
wr => ram.WE
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= data_out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= data_out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= data_out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= data_out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
addr_rd[0] => Add2.IN5
addr_rd[1] => Add2.IN4
addr_rd[2] => Add2.IN3
addr_rd[3] => Add2.IN2
addr_rd[4] => Add2.IN1
addr_rd[5] => ram.RADDR5
addr_rd[6] => ram.RADDR6
addr_rd[7] => ram.RADDR7
addr_rd[8] => ram.RADDR8
addr_rd[9] => ram.RADDR9
addr_rd[10] => ram.RADDR10
addr_rd[11] => ram.RADDR11
rd => data_out[15]~reg0.ENA
rd => data_out[14]~reg0.ENA
rd => data_out[13]~reg0.ENA
rd => data_out[12]~reg0.ENA
rd => data_out[11]~reg0.ENA
rd => data_out[10]~reg0.ENA
rd => data_out[9]~reg0.ENA
rd => data_out[8]~reg0.ENA
rd => data_out[7]~reg0.ENA
rd => data_out[6]~reg0.ENA
rd => data_out[5]~reg0.ENA
rd => data_out[4]~reg0.ENA
rd => data_out[3]~reg0.ENA
rd => data_out[2]~reg0.ENA
rd => data_out[1]~reg0.ENA
rd => data_out[0]~reg0.ENA
scroll_offset[0] => Add0.IN10
scroll_offset[0] => Add2.IN10
scroll_offset[1] => Add0.IN9
scroll_offset[1] => Add2.IN9
scroll_offset[2] => Add0.IN8
scroll_offset[2] => Add2.IN8
scroll_offset[3] => Add0.IN7
scroll_offset[3] => Add2.IN7
scroll_offset[4] => Add0.IN6
scroll_offset[4] => Add2.IN6


|MAIN|textmode_controller_1c:textm_ctrl|font_rom:font_rom_inst
vga_clk => decoded_char[7]~reg0.CLK
vga_clk => decoded_char[6]~reg0.CLK
vga_clk => decoded_char[5]~reg0.CLK
vga_clk => decoded_char[4]~reg0.CLK
vga_clk => decoded_char[3]~reg0.CLK
vga_clk => decoded_char[2]~reg0.CLK
vga_clk => decoded_char[1]~reg0.CLK
vga_clk => decoded_char[0]~reg0.CLK
char[0] => Mux0.IN4103
char[0] => Mux1.IN4103
char[0] => Mux2.IN4103
char[0] => Mux3.IN4103
char[0] => Mux4.IN4103
char[0] => Mux5.IN4103
char[0] => Mux6.IN4103
char[0] => Mux7.IN4103
char[1] => Mux0.IN4102
char[1] => Mux1.IN4102
char[1] => Mux2.IN4102
char[1] => Mux3.IN4102
char[1] => Mux4.IN4102
char[1] => Mux5.IN4102
char[1] => Mux6.IN4102
char[1] => Mux7.IN4102
char[2] => Mux0.IN4101
char[2] => Mux1.IN4101
char[2] => Mux2.IN4101
char[2] => Mux3.IN4101
char[2] => Mux4.IN4101
char[2] => Mux5.IN4101
char[2] => Mux6.IN4101
char[2] => Mux7.IN4101
char[3] => Mux0.IN4100
char[3] => Mux1.IN4100
char[3] => Mux2.IN4100
char[3] => Mux3.IN4100
char[3] => Mux4.IN4100
char[3] => Mux5.IN4100
char[3] => Mux6.IN4100
char[3] => Mux7.IN4100
char[4] => Mux0.IN4099
char[4] => Mux1.IN4099
char[4] => Mux2.IN4099
char[4] => Mux3.IN4099
char[4] => Mux4.IN4099
char[4] => Mux5.IN4099
char[4] => Mux6.IN4099
char[4] => Mux7.IN4099
char[5] => Mux0.IN4098
char[5] => Mux1.IN4098
char[5] => Mux2.IN4098
char[5] => Mux3.IN4098
char[5] => Mux4.IN4098
char[5] => Mux5.IN4098
char[5] => Mux6.IN4098
char[5] => Mux7.IN4098
char[6] => Mux0.IN4097
char[6] => Mux1.IN4097
char[6] => Mux2.IN4097
char[6] => Mux3.IN4097
char[6] => Mux4.IN4097
char[6] => Mux5.IN4097
char[6] => Mux6.IN4097
char[6] => Mux7.IN4097
char[7] => Mux0.IN4096
char[7] => Mux1.IN4096
char[7] => Mux2.IN4096
char[7] => Mux3.IN4096
char[7] => Mux4.IN4096
char[7] => Mux5.IN4096
char[7] => Mux6.IN4096
char[7] => Mux7.IN4096
char_height_pixel[0] => Mux0.IN4107
char_height_pixel[0] => Mux1.IN4107
char_height_pixel[0] => Mux2.IN4107
char_height_pixel[0] => Mux3.IN4107
char_height_pixel[0] => Mux4.IN4107
char_height_pixel[0] => Mux5.IN4107
char_height_pixel[0] => Mux6.IN4107
char_height_pixel[0] => Mux7.IN4107
char_height_pixel[1] => Mux0.IN4106
char_height_pixel[1] => Mux1.IN4106
char_height_pixel[1] => Mux2.IN4106
char_height_pixel[1] => Mux3.IN4106
char_height_pixel[1] => Mux4.IN4106
char_height_pixel[1] => Mux5.IN4106
char_height_pixel[1] => Mux6.IN4106
char_height_pixel[1] => Mux7.IN4106
char_height_pixel[2] => Mux0.IN4105
char_height_pixel[2] => Mux1.IN4105
char_height_pixel[2] => Mux2.IN4105
char_height_pixel[2] => Mux3.IN4105
char_height_pixel[2] => Mux4.IN4105
char_height_pixel[2] => Mux5.IN4105
char_height_pixel[2] => Mux6.IN4105
char_height_pixel[2] => Mux7.IN4105
char_height_pixel[3] => Mux0.IN4104
char_height_pixel[3] => Mux1.IN4104
char_height_pixel[3] => Mux2.IN4104
char_height_pixel[3] => Mux3.IN4104
char_height_pixel[3] => Mux4.IN4104
char_height_pixel[3] => Mux5.IN4104
char_height_pixel[3] => Mux6.IN4104
char_height_pixel[3] => Mux7.IN4104
decoded_char[7] <= decoded_char[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
decoded_char[6] <= decoded_char[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
decoded_char[5] <= decoded_char[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
decoded_char[4] <= decoded_char[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
decoded_char[3] <= decoded_char[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
decoded_char[2] <= decoded_char[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
decoded_char[1] <= decoded_char[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
decoded_char[0] <= decoded_char[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|textmode_controller_1c:textm_ctrl|display_controller:display_controller_inst
clk => attribut_buffer[0].CLK
clk => attribut_buffer[1].CLK
clk => attribut_buffer[2].CLK
clk => attribut_buffer[3].CLK
clk => attribut_buffer[4].CLK
clk => attribut_buffer[5].CLK
clk => attribut_buffer[6].CLK
clk => attribut_buffer[7].CLK
clk => char_pixel_buffer[7].CLK
clk => char_pixel_buffer[6].CLK
clk => char_pixel_buffer[5].CLK
clk => char_pixel_buffer[4].CLK
clk => char_pixel_buffer[3].CLK
clk => char_pixel_buffer[2].CLK
clk => char_pixel_buffer[1].CLK
clk => char_pixel_buffer[0].CLK
clk => grest~reg0.CLK
clk => hline_cnt[0].CLK
clk => hline_cnt[1].CLK
clk => hline_cnt[2].CLK
clk => hline_cnt[3].CLK
clk => hline_cnt[4].CLK
clk => hline_cnt[5].CLK
clk => hline_cnt[6].CLK
clk => hline_cnt[7].CLK
clk => hline_cnt[8].CLK
clk => hline_cnt[9].CLK
clk => clk_cnt[0].CLK
clk => clk_cnt[1].CLK
clk => clk_cnt[2].CLK
clk => clk_cnt[3].CLK
clk => clk_cnt[4].CLK
clk => clk_cnt[5].CLK
clk => clk_cnt[6].CLK
clk => clk_cnt[7].CLK
clk => clk_cnt[8].CLK
clk => clk_cnt[9].CLK
clk => clk_cnt[10].CLK
res_n => attribut_buffer[0].ACLR
res_n => attribut_buffer[1].ACLR
res_n => attribut_buffer[2].ACLR
res_n => attribut_buffer[3].ACLR
res_n => attribut_buffer[4].ACLR
res_n => attribut_buffer[5].ACLR
res_n => attribut_buffer[6].ACLR
res_n => attribut_buffer[7].ACLR
res_n => char_pixel_buffer[7].ACLR
res_n => char_pixel_buffer[6].ACLR
res_n => char_pixel_buffer[5].ACLR
res_n => char_pixel_buffer[4].ACLR
res_n => char_pixel_buffer[3].ACLR
res_n => char_pixel_buffer[2].ACLR
res_n => char_pixel_buffer[1].ACLR
res_n => char_pixel_buffer[0].ACLR
res_n => grest~reg0.ACLR
res_n => hline_cnt[0].ACLR
res_n => hline_cnt[1].ACLR
res_n => hline_cnt[2].ACLR
res_n => hline_cnt[3].ACLR
res_n => hline_cnt[4].ACLR
res_n => hline_cnt[5].ACLR
res_n => hline_cnt[6].ACLR
res_n => hline_cnt[7].ACLR
res_n => hline_cnt[8].ACLR
res_n => hline_cnt[9].ACLR
res_n => clk_cnt[0].ACLR
res_n => clk_cnt[1].ACLR
res_n => clk_cnt[2].ACLR
res_n => clk_cnt[3].ACLR
res_n => clk_cnt[4].ACLR
res_n => clk_cnt[5].ACLR
res_n => clk_cnt[6].ACLR
res_n => clk_cnt[7].ACLR
res_n => clk_cnt[8].ACLR
res_n => clk_cnt[9].ACLR
res_n => clk_cnt[10].ACLR
vram_addr_row[0] <= vram_addr_row.DB_MAX_OUTPUT_PORT_TYPE
vram_addr_row[1] <= vram_addr_row.DB_MAX_OUTPUT_PORT_TYPE
vram_addr_row[2] <= vram_addr_row.DB_MAX_OUTPUT_PORT_TYPE
vram_addr_row[3] <= vram_addr_row.DB_MAX_OUTPUT_PORT_TYPE
vram_addr_row[4] <= vram_addr_row.DB_MAX_OUTPUT_PORT_TYPE
vram_addr_colum[0] <= vram_addr_colum.DB_MAX_OUTPUT_PORT_TYPE
vram_addr_colum[1] <= vram_addr_colum.DB_MAX_OUTPUT_PORT_TYPE
vram_addr_colum[2] <= vram_addr_colum.DB_MAX_OUTPUT_PORT_TYPE
vram_addr_colum[3] <= vram_addr_colum.DB_MAX_OUTPUT_PORT_TYPE
vram_addr_colum[4] <= vram_addr_colum.DB_MAX_OUTPUT_PORT_TYPE
vram_addr_colum[5] <= vram_addr_colum.DB_MAX_OUTPUT_PORT_TYPE
vram_addr_colum[6] <= vram_addr_colum.DB_MAX_OUTPUT_PORT_TYPE
vram_data[0] => char.DATAB
vram_data[1] => char.DATAB
vram_data[2] => char.DATAB
vram_data[3] => char.DATAB
vram_data[4] => char.DATAB
vram_data[5] => char.DATAB
vram_data[6] => char.DATAB
vram_data[7] => char.DATAB
vram_data[8] => attribut_buffer_next.DATAB
vram_data[9] => attribut_buffer_next.DATAB
vram_data[10] => attribut_buffer_next.DATAB
vram_data[11] => attribut_buffer_next.DATAB
vram_data[12] => attribut_buffer_next.DATAB
vram_data[13] => attribut_buffer_next.DATAB
vram_data[14] => attribut_buffer_next.DATAB
vram_data[15] => attribut_buffer_next.DATAB
vram_rd <= vram_rd.DB_MAX_OUTPUT_PORT_TYPE
char[0] <= char.DB_MAX_OUTPUT_PORT_TYPE
char[1] <= char.DB_MAX_OUTPUT_PORT_TYPE
char[2] <= char.DB_MAX_OUTPUT_PORT_TYPE
char[3] <= char.DB_MAX_OUTPUT_PORT_TYPE
char[4] <= char.DB_MAX_OUTPUT_PORT_TYPE
char[5] <= char.DB_MAX_OUTPUT_PORT_TYPE
char[6] <= char.DB_MAX_OUTPUT_PORT_TYPE
char[7] <= char.DB_MAX_OUTPUT_PORT_TYPE
char_height_pixel[0] <= char_height_pixel.DB_MAX_OUTPUT_PORT_TYPE
char_height_pixel[1] <= char_height_pixel.DB_MAX_OUTPUT_PORT_TYPE
char_height_pixel[2] <= char_height_pixel.DB_MAX_OUTPUT_PORT_TYPE
char_height_pixel[3] <= char_height_pixel.DB_MAX_OUTPUT_PORT_TYPE
decoded_char[7] => char_pixel_buffer_next.DATAB
decoded_char[6] => char_pixel_buffer_next.DATAB
decoded_char[5] => char_pixel_buffer_next.DATAB
decoded_char[4] => char_pixel_buffer_next.DATAB
decoded_char[3] => char_pixel_buffer_next.DATAB
decoded_char[2] => char_pixel_buffer_next.DATAB
decoded_char[1] => char_pixel_buffer_next.DATAB
decoded_char[0] => char_pixel_buffer_next.DATAB
hd <= Equal2.DB_MAX_OUTPUT_PORT_TYPE
vd <= Equal3.DB_MAX_OUTPUT_PORT_TYPE
den <= den.DB_MAX_OUTPUT_PORT_TYPE
r[0] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[1] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[2] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[3] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[4] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[5] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[6] <= r.DB_MAX_OUTPUT_PORT_TYPE
r[7] <= r.DB_MAX_OUTPUT_PORT_TYPE
g[0] <= g.DB_MAX_OUTPUT_PORT_TYPE
g[1] <= g.DB_MAX_OUTPUT_PORT_TYPE
g[2] <= g.DB_MAX_OUTPUT_PORT_TYPE
g[3] <= g.DB_MAX_OUTPUT_PORT_TYPE
g[4] <= g.DB_MAX_OUTPUT_PORT_TYPE
g[5] <= g.DB_MAX_OUTPUT_PORT_TYPE
g[6] <= g.DB_MAX_OUTPUT_PORT_TYPE
g[7] <= g.DB_MAX_OUTPUT_PORT_TYPE
b[0] <= b.DB_MAX_OUTPUT_PORT_TYPE
b[1] <= b.DB_MAX_OUTPUT_PORT_TYPE
b[2] <= b.DB_MAX_OUTPUT_PORT_TYPE
b[3] <= b.DB_MAX_OUTPUT_PORT_TYPE
b[4] <= b.DB_MAX_OUTPUT_PORT_TYPE
b[5] <= b.DB_MAX_OUTPUT_PORT_TYPE
b[6] <= b.DB_MAX_OUTPUT_PORT_TYPE
b[7] <= b.DB_MAX_OUTPUT_PORT_TYPE
grest <= grest~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|textmode_controller_1c:textm_ctrl|cursor_controller:cursor_controller_inst
clk => change_output.CLK
clk => blink_cnt[0].CLK
clk => blink_cnt[1].CLK
clk => blink_cnt[2].CLK
clk => blink_cnt[3].CLK
clk => blink_cnt[4].CLK
clk => blink_cnt[5].CLK
clk => blink_cnt[6].CLK
clk => blink_cnt[7].CLK
clk => blink_cnt[8].CLK
clk => blink_cnt[9].CLK
clk => blink_cnt[10].CLK
clk => blink_cnt[11].CLK
clk => blink_cnt[12].CLK
clk => blink_cnt[13].CLK
clk => blink_cnt[14].CLK
clk => blink_cnt[15].CLK
clk => blink_cnt[16].CLK
clk => blink_cnt[17].CLK
clk => blink_cnt[18].CLK
clk => blink_cnt[19].CLK
clk => blink_cnt[20].CLK
clk => blink_cnt[21].CLK
clk => blink_cnt[22].CLK
clk => blink_cnt[23].CLK
clk => blink_cnt[24].CLK
clk => cursor_controller_state~1.DATAIN
res_n => blink_cnt[0].ACLR
res_n => blink_cnt[1].ACLR
res_n => blink_cnt[2].ACLR
res_n => blink_cnt[3].ACLR
res_n => blink_cnt[4].ACLR
res_n => blink_cnt[5].ACLR
res_n => blink_cnt[6].ACLR
res_n => blink_cnt[7].ACLR
res_n => blink_cnt[8].ACLR
res_n => blink_cnt[9].ACLR
res_n => blink_cnt[10].ACLR
res_n => blink_cnt[11].ACLR
res_n => blink_cnt[12].ACLR
res_n => blink_cnt[13].ACLR
res_n => blink_cnt[14].ACLR
res_n => blink_cnt[15].ACLR
res_n => blink_cnt[16].ACLR
res_n => blink_cnt[17].ACLR
res_n => blink_cnt[18].ACLR
res_n => blink_cnt[19].ACLR
res_n => blink_cnt[20].ACLR
res_n => blink_cnt[21].ACLR
res_n => blink_cnt[22].ACLR
res_n => blink_cnt[23].ACLR
res_n => blink_cnt[24].ACLR
res_n => cursor_controller_state~3.DATAIN
res_n => change_output.ENA
cursor_state[0] => Mux0.IN5
cursor_state[0] => Mux1.IN5
cursor_state[1] => Mux0.IN4
cursor_state[1] => Mux1.IN4
cursor_state[1] => cursor_controller_state_next.OUTPUTSELECT
cursor_state[1] => cursor_controller_state_next.OUTPUTSELECT
cursor_color[0] => vram_data_color_out.DATAB
cursor_color[1] => vram_data_color_out.DATAB
cursor_color[2] => vram_data_color_out.DATAB
cursor_color[3] => vram_data_color_out.DATAB
position_row[0] => Equal1.IN4
position_row[1] => Equal1.IN3
position_row[2] => Equal1.IN2
position_row[3] => Equal1.IN1
position_row[4] => Equal1.IN0
position_colum[0] => Equal0.IN6
position_colum[1] => Equal0.IN5
position_colum[2] => Equal0.IN4
position_colum[3] => Equal0.IN3
position_colum[4] => Equal0.IN2
position_colum[5] => Equal0.IN1
position_colum[6] => Equal0.IN0
vram_addr_row[0] => Equal1.IN9
vram_addr_row[1] => Equal1.IN8
vram_addr_row[2] => Equal1.IN7
vram_addr_row[3] => Equal1.IN6
vram_addr_row[4] => Equal1.IN5
vram_addr_colum[0] => Equal0.IN13
vram_addr_colum[1] => Equal0.IN12
vram_addr_colum[2] => Equal0.IN11
vram_addr_colum[3] => Equal0.IN10
vram_addr_colum[4] => Equal0.IN9
vram_addr_colum[5] => Equal0.IN8
vram_addr_colum[6] => Equal0.IN7
vram_rd => next_state.IN1
vram_rd => change_output_next.OUTPUTSELECT
vram_data_color_in[0] => vram_data_color_out.DATAA
vram_data_color_in[1] => vram_data_color_out.DATAA
vram_data_color_in[2] => vram_data_color_out.DATAA
vram_data_color_in[3] => vram_data_color_out.DATAA
vram_data_color_out[0] <= vram_data_color_out.DB_MAX_OUTPUT_PORT_TYPE
vram_data_color_out[1] <= vram_data_color_out.DB_MAX_OUTPUT_PORT_TYPE
vram_data_color_out[2] <= vram_data_color_out.DB_MAX_OUTPUT_PORT_TYPE
vram_data_color_out[3] <= vram_data_color_out.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|seven_segment_display:seven_segm_display
clk => data_int[0].CLK
clk => data_int[1].CLK
clk => data_int[2].CLK
clk => data_int[3].CLK
clk => data_int[4].CLK
clk => data_int[5].CLK
clk => data_int[6].CLK
clk => data_int[7].CLK
res_n => data_int[0].ACLR
res_n => data_int[1].ACLR
res_n => data_int[2].ACLR
res_n => data_int[3].ACLR
res_n => data_int[4].ACLR
res_n => data_int[5].ACLR
res_n => data_int[6].ACLR
res_n => data_int[7].ACLR
data[0] => data_int[0].DATAIN
data[1] => data_int[1].DATAIN
data[2] => data_int[2].DATAIN
data[3] => data_int[3].DATAIN
data[4] => data_int[4].DATAIN
data[5] => data_int[5].DATAIN
data[6] => data_int[6].DATAIN
data[7] => data_int[7].DATAIN
new_data => data_int[7].ENA
new_data => data_int[6].ENA
new_data => data_int[5].ENA
new_data => data_int[4].ENA
new_data => data_int[3].ENA
new_data => data_int[2].ENA
new_data => data_int[1].ENA
new_data => data_int[0].ENA
seg_data[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
seg_data[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
seg_data[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
seg_data[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
seg_data[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
seg_data[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
seg_data[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[7] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
seg_data[8] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
seg_data[9] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
seg_data[10] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
seg_data[11] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
seg_data[12] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
seg_data[13] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|rs232_controller:rs232
clk => sync:sync_rx.clk
clk => serial_port_receiver:serial_port_receiver_fsm.clk
clk => fifo_1c1r1w:fifo_rx.clk
clk => fifo_1c1r1w:fifo_tx.clk
clk => serial_port_transmitter:serial_port_transmitter_fsm.clk
res_n => sync:sync_rx.res_n
res_n => serial_port_receiver:serial_port_receiver_fsm.res_n
res_n => fifo_1c1r1w:fifo_rx.res_n
res_n => fifo_1c1r1w:fifo_tx.res_n
res_n => serial_port_transmitter:serial_port_transmitter_fsm.res_n
rx => sync:sync_rx.data_in
rx_rd => fifo_1c1r1w:fifo_rx.rd1
tx_data[0] => fifo_1c1r1w:fifo_tx.data_in2[0]
tx_data[1] => fifo_1c1r1w:fifo_tx.data_in2[1]
tx_data[2] => fifo_1c1r1w:fifo_tx.data_in2[2]
tx_data[3] => fifo_1c1r1w:fifo_tx.data_in2[3]
tx_data[4] => fifo_1c1r1w:fifo_tx.data_in2[4]
tx_data[5] => fifo_1c1r1w:fifo_tx.data_in2[5]
tx_data[6] => fifo_1c1r1w:fifo_tx.data_in2[6]
tx_data[7] => fifo_1c1r1w:fifo_tx.data_in2[7]
tx_wr => fifo_1c1r1w:fifo_tx.wr2
rx_data[0] <= fifo_1c1r1w:fifo_rx.data_out1[0]
rx_data[1] <= fifo_1c1r1w:fifo_rx.data_out1[1]
rx_data[2] <= fifo_1c1r1w:fifo_rx.data_out1[2]
rx_data[3] <= fifo_1c1r1w:fifo_rx.data_out1[3]
rx_data[4] <= fifo_1c1r1w:fifo_rx.data_out1[4]
rx_data[5] <= fifo_1c1r1w:fifo_rx.data_out1[5]
rx_data[6] <= fifo_1c1r1w:fifo_rx.data_out1[6]
rx_data[7] <= fifo_1c1r1w:fifo_rx.data_out1[7]
rx_data_empty <= fifo_1c1r1w:fifo_rx.empty
rx_data_full <= fifo_1c1r1w:fifo_rx.full
tx <= serial_port_transmitter:serial_port_transmitter_fsm.tx
tx_free <= fifo_1c1r1w:fifo_tx.full


|MAIN|rs232_controller:rs232|sync:sync_rx
clk => sync[2].CLK
clk => sync[1].CLK
res_n => sync[2].PRESET
res_n => sync[1].PRESET
data_in => sync[1].DATAIN
data_out <= sync[2].DB_MAX_OUTPUT_PORT_TYPE


|MAIN|rs232_controller:rs232|serial_port_receiver:serial_port_receiver_fsm
clk => data_new~reg0.CLK
clk => receive_data[0].CLK
clk => receive_data[1].CLK
clk => receive_data[2].CLK
clk => receive_data[3].CLK
clk => receive_data[4].CLK
clk => receive_data[5].CLK
clk => receive_data[6].CLK
clk => receive_data[7].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => clk_cnt[0].CLK
clk => clk_cnt[1].CLK
clk => clk_cnt[2].CLK
clk => clk_cnt[3].CLK
clk => clk_cnt[4].CLK
clk => clk_cnt[5].CLK
clk => clk_cnt[6].CLK
clk => clk_cnt[7].CLK
clk => clk_cnt[8].CLK
clk => clk_cnt[9].CLK
clk => clk_cnt[10].CLK
clk => clk_cnt[11].CLK
clk => receiver_state~1.DATAIN
res_n => data[0]~reg0.ACLR
res_n => data[1]~reg0.ACLR
res_n => data[2]~reg0.ACLR
res_n => data[3]~reg0.ACLR
res_n => data[4]~reg0.ACLR
res_n => data[5]~reg0.ACLR
res_n => data[6]~reg0.ACLR
res_n => data[7]~reg0.ACLR
res_n => bit_cnt[0].ACLR
res_n => bit_cnt[1].ACLR
res_n => bit_cnt[2].ACLR
res_n => bit_cnt[3].ACLR
res_n => clk_cnt[0].ACLR
res_n => clk_cnt[1].ACLR
res_n => clk_cnt[2].ACLR
res_n => clk_cnt[3].ACLR
res_n => clk_cnt[4].ACLR
res_n => clk_cnt[5].ACLR
res_n => clk_cnt[6].ACLR
res_n => clk_cnt[7].ACLR
res_n => clk_cnt[8].ACLR
res_n => clk_cnt[9].ACLR
res_n => clk_cnt[10].ACLR
res_n => clk_cnt[11].ACLR
res_n => receiver_state~3.DATAIN
res_n => data_new~reg0.ENA
res_n => receive_data[7].ENA
res_n => receive_data[6].ENA
res_n => receive_data[5].ENA
res_n => receive_data[4].ENA
res_n => receive_data[3].ENA
res_n => receive_data[2].ENA
res_n => receive_data[1].ENA
res_n => receive_data[0].ENA
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receive_data_next[7].DATAIN
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
rx => receiver_state_next.OUTPUTSELECT
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_new <= data_new~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|rs232_controller:rs232|fifo_1c1r1w:fifo_rx
clk => dp_ram_1c1r1w:memory_inst.clk
clk => empty_int.CLK
clk => full_int.CLK
clk => write_address[0].CLK
clk => write_address[1].CLK
clk => write_address[2].CLK
clk => write_address[3].CLK
clk => read_address[0].CLK
clk => read_address[1].CLK
clk => read_address[2].CLK
clk => read_address[3].CLK
res_n => empty_int.PRESET
res_n => full_int.ACLR
res_n => write_address[0].ACLR
res_n => write_address[1].ACLR
res_n => write_address[2].ACLR
res_n => write_address[3].ACLR
res_n => read_address[0].ACLR
res_n => read_address[1].ACLR
res_n => read_address[2].ACLR
res_n => read_address[3].ACLR
data_out1[0] <= dp_ram_1c1r1w:memory_inst.rdata1[0]
data_out1[1] <= dp_ram_1c1r1w:memory_inst.rdata1[1]
data_out1[2] <= dp_ram_1c1r1w:memory_inst.rdata1[2]
data_out1[3] <= dp_ram_1c1r1w:memory_inst.rdata1[3]
data_out1[4] <= dp_ram_1c1r1w:memory_inst.rdata1[4]
data_out1[5] <= dp_ram_1c1r1w:memory_inst.rdata1[5]
data_out1[6] <= dp_ram_1c1r1w:memory_inst.rdata1[6]
data_out1[7] <= dp_ram_1c1r1w:memory_inst.rdata1[7]
rd1 => rd_int.IN1
rd1 => full_next.OUTPUTSELECT
rd1 => empty_next.OUTPUTSELECT
data_in2[0] => dp_ram_1c1r1w:memory_inst.wdata2[0]
data_in2[1] => dp_ram_1c1r1w:memory_inst.wdata2[1]
data_in2[2] => dp_ram_1c1r1w:memory_inst.wdata2[2]
data_in2[3] => dp_ram_1c1r1w:memory_inst.wdata2[3]
data_in2[4] => dp_ram_1c1r1w:memory_inst.wdata2[4]
data_in2[5] => dp_ram_1c1r1w:memory_inst.wdata2[5]
data_in2[6] => dp_ram_1c1r1w:memory_inst.wdata2[6]
data_in2[7] => dp_ram_1c1r1w:memory_inst.wdata2[7]
wr2 => wr_int.IN1
wr2 => empty_next.OUTPUTSELECT
wr2 => full_next.OUTPUTSELECT
empty <= empty_int.DB_MAX_OUTPUT_PORT_TYPE
full <= full_int.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|rs232_controller:rs232|fifo_1c1r1w:fifo_rx|dp_ram_1c1r1w:memory_inst
clk => ram~12.CLK
clk => ram~0.CLK
clk => ram~1.CLK
clk => ram~2.CLK
clk => ram~3.CLK
clk => ram~4.CLK
clk => ram~5.CLK
clk => ram~6.CLK
clk => ram~7.CLK
clk => ram~8.CLK
clk => ram~9.CLK
clk => ram~10.CLK
clk => ram~11.CLK
clk => rdata1[0]~reg0.CLK
clk => rdata1[1]~reg0.CLK
clk => rdata1[2]~reg0.CLK
clk => rdata1[3]~reg0.CLK
clk => rdata1[4]~reg0.CLK
clk => rdata1[5]~reg0.CLK
clk => rdata1[6]~reg0.CLK
clk => rdata1[7]~reg0.CLK
clk => ram.CLK0
raddr1[0] => ram.RADDR
raddr1[1] => ram.RADDR1
raddr1[2] => ram.RADDR2
raddr1[3] => ram.RADDR3
rdata1[0] <= rdata1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[1] <= rdata1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[2] <= rdata1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[3] <= rdata1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[4] <= rdata1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[5] <= rdata1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[6] <= rdata1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[7] <= rdata1[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd1 => rdata1[0]~reg0.ENA
rd1 => rdata1[1]~reg0.ENA
rd1 => rdata1[2]~reg0.ENA
rd1 => rdata1[3]~reg0.ENA
rd1 => rdata1[4]~reg0.ENA
rd1 => rdata1[5]~reg0.ENA
rd1 => rdata1[6]~reg0.ENA
rd1 => rdata1[7]~reg0.ENA
waddr2[0] => ram~3.DATAIN
waddr2[0] => ram.WADDR
waddr2[1] => ram~2.DATAIN
waddr2[1] => ram.WADDR1
waddr2[2] => ram~1.DATAIN
waddr2[2] => ram.WADDR2
waddr2[3] => ram~0.DATAIN
waddr2[3] => ram.WADDR3
wdata2[0] => ram~11.DATAIN
wdata2[0] => ram.DATAIN
wdata2[1] => ram~10.DATAIN
wdata2[1] => ram.DATAIN1
wdata2[2] => ram~9.DATAIN
wdata2[2] => ram.DATAIN2
wdata2[3] => ram~8.DATAIN
wdata2[3] => ram.DATAIN3
wdata2[4] => ram~7.DATAIN
wdata2[4] => ram.DATAIN4
wdata2[5] => ram~6.DATAIN
wdata2[5] => ram.DATAIN5
wdata2[6] => ram~5.DATAIN
wdata2[6] => ram.DATAIN6
wdata2[7] => ram~4.DATAIN
wdata2[7] => ram.DATAIN7
wr2 => ram~12.DATAIN
wr2 => ram.WE


|MAIN|rs232_controller:rs232|fifo_1c1r1w:fifo_tx
clk => dp_ram_1c1r1w:memory_inst.clk
clk => empty_int.CLK
clk => full_int.CLK
clk => write_address[0].CLK
clk => write_address[1].CLK
clk => write_address[2].CLK
clk => write_address[3].CLK
clk => read_address[0].CLK
clk => read_address[1].CLK
clk => read_address[2].CLK
clk => read_address[3].CLK
res_n => empty_int.PRESET
res_n => full_int.ACLR
res_n => write_address[0].ACLR
res_n => write_address[1].ACLR
res_n => write_address[2].ACLR
res_n => write_address[3].ACLR
res_n => read_address[0].ACLR
res_n => read_address[1].ACLR
res_n => read_address[2].ACLR
res_n => read_address[3].ACLR
data_out1[0] <= dp_ram_1c1r1w:memory_inst.rdata1[0]
data_out1[1] <= dp_ram_1c1r1w:memory_inst.rdata1[1]
data_out1[2] <= dp_ram_1c1r1w:memory_inst.rdata1[2]
data_out1[3] <= dp_ram_1c1r1w:memory_inst.rdata1[3]
data_out1[4] <= dp_ram_1c1r1w:memory_inst.rdata1[4]
data_out1[5] <= dp_ram_1c1r1w:memory_inst.rdata1[5]
data_out1[6] <= dp_ram_1c1r1w:memory_inst.rdata1[6]
data_out1[7] <= dp_ram_1c1r1w:memory_inst.rdata1[7]
rd1 => rd_int.IN1
rd1 => full_next.OUTPUTSELECT
rd1 => empty_next.OUTPUTSELECT
data_in2[0] => dp_ram_1c1r1w:memory_inst.wdata2[0]
data_in2[1] => dp_ram_1c1r1w:memory_inst.wdata2[1]
data_in2[2] => dp_ram_1c1r1w:memory_inst.wdata2[2]
data_in2[3] => dp_ram_1c1r1w:memory_inst.wdata2[3]
data_in2[4] => dp_ram_1c1r1w:memory_inst.wdata2[4]
data_in2[5] => dp_ram_1c1r1w:memory_inst.wdata2[5]
data_in2[6] => dp_ram_1c1r1w:memory_inst.wdata2[6]
data_in2[7] => dp_ram_1c1r1w:memory_inst.wdata2[7]
wr2 => wr_int.IN1
wr2 => empty_next.OUTPUTSELECT
wr2 => full_next.OUTPUTSELECT
empty <= empty_int.DB_MAX_OUTPUT_PORT_TYPE
full <= full_int.DB_MAX_OUTPUT_PORT_TYPE


|MAIN|rs232_controller:rs232|fifo_1c1r1w:fifo_tx|dp_ram_1c1r1w:memory_inst
clk => ram~12.CLK
clk => ram~0.CLK
clk => ram~1.CLK
clk => ram~2.CLK
clk => ram~3.CLK
clk => ram~4.CLK
clk => ram~5.CLK
clk => ram~6.CLK
clk => ram~7.CLK
clk => ram~8.CLK
clk => ram~9.CLK
clk => ram~10.CLK
clk => ram~11.CLK
clk => rdata1[0]~reg0.CLK
clk => rdata1[1]~reg0.CLK
clk => rdata1[2]~reg0.CLK
clk => rdata1[3]~reg0.CLK
clk => rdata1[4]~reg0.CLK
clk => rdata1[5]~reg0.CLK
clk => rdata1[6]~reg0.CLK
clk => rdata1[7]~reg0.CLK
clk => ram.CLK0
raddr1[0] => ram.RADDR
raddr1[1] => ram.RADDR1
raddr1[2] => ram.RADDR2
raddr1[3] => ram.RADDR3
rdata1[0] <= rdata1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[1] <= rdata1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[2] <= rdata1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[3] <= rdata1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[4] <= rdata1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[5] <= rdata1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[6] <= rdata1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata1[7] <= rdata1[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd1 => rdata1[0]~reg0.ENA
rd1 => rdata1[1]~reg0.ENA
rd1 => rdata1[2]~reg0.ENA
rd1 => rdata1[3]~reg0.ENA
rd1 => rdata1[4]~reg0.ENA
rd1 => rdata1[5]~reg0.ENA
rd1 => rdata1[6]~reg0.ENA
rd1 => rdata1[7]~reg0.ENA
waddr2[0] => ram~3.DATAIN
waddr2[0] => ram.WADDR
waddr2[1] => ram~2.DATAIN
waddr2[1] => ram.WADDR1
waddr2[2] => ram~1.DATAIN
waddr2[2] => ram.WADDR2
waddr2[3] => ram~0.DATAIN
waddr2[3] => ram.WADDR3
wdata2[0] => ram~11.DATAIN
wdata2[0] => ram.DATAIN
wdata2[1] => ram~10.DATAIN
wdata2[1] => ram.DATAIN1
wdata2[2] => ram~9.DATAIN
wdata2[2] => ram.DATAIN2
wdata2[3] => ram~8.DATAIN
wdata2[3] => ram.DATAIN3
wdata2[4] => ram~7.DATAIN
wdata2[4] => ram.DATAIN4
wdata2[5] => ram~6.DATAIN
wdata2[5] => ram.DATAIN5
wdata2[6] => ram~5.DATAIN
wdata2[6] => ram.DATAIN6
wdata2[7] => ram~4.DATAIN
wdata2[7] => ram.DATAIN7
wr2 => ram~12.DATAIN
wr2 => ram.WE


|MAIN|rs232_controller:rs232|serial_port_transmitter:serial_port_transmitter_fsm
clk => rd~reg0.CLK
clk => tx~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => transmit_data[0].CLK
clk => transmit_data[1].CLK
clk => transmit_data[2].CLK
clk => transmit_data[3].CLK
clk => transmit_data[4].CLK
clk => transmit_data[5].CLK
clk => transmit_data[6].CLK
clk => transmit_data[7].CLK
clk => clk_cnt[0].CLK
clk => clk_cnt[1].CLK
clk => clk_cnt[2].CLK
clk => clk_cnt[3].CLK
clk => clk_cnt[4].CLK
clk => clk_cnt[5].CLK
clk => clk_cnt[6].CLK
clk => clk_cnt[7].CLK
clk => clk_cnt[8].CLK
clk => clk_cnt[9].CLK
clk => clk_cnt[10].CLK
clk => clk_cnt[11].CLK
clk => transmitter_state~1.DATAIN
res_n => rd~reg0.ACLR
res_n => tx~reg0.PRESET
res_n => bit_cnt[0].ACLR
res_n => bit_cnt[1].ACLR
res_n => bit_cnt[2].ACLR
res_n => bit_cnt[3].ACLR
res_n => transmit_data[0].ACLR
res_n => transmit_data[1].ACLR
res_n => transmit_data[2].ACLR
res_n => transmit_data[3].ACLR
res_n => transmit_data[4].ACLR
res_n => transmit_data[5].ACLR
res_n => transmit_data[6].ACLR
res_n => transmit_data[7].ACLR
res_n => clk_cnt[0].ACLR
res_n => clk_cnt[1].ACLR
res_n => clk_cnt[2].ACLR
res_n => clk_cnt[3].ACLR
res_n => clk_cnt[4].ACLR
res_n => clk_cnt[5].ACLR
res_n => clk_cnt[6].ACLR
res_n => clk_cnt[7].ACLR
res_n => clk_cnt[8].ACLR
res_n => clk_cnt[9].ACLR
res_n => clk_cnt[10].ACLR
res_n => clk_cnt[11].ACLR
res_n => transmitter_state~3.DATAIN
data[0] => Selector31.IN1
data[1] => Selector30.IN1
data[2] => Selector29.IN1
data[3] => Selector28.IN1
data[4] => Selector27.IN1
data[5] => Selector26.IN1
data[6] => Selector25.IN1
data[7] => transmit_data[7].DATAIN
empty => transmitter_state_next.DATAB
empty => transmitter_state_next.OUTPUTSELECT
empty => transmitter_state_next.OUTPUTSELECT
empty => transmitter_state_next.OUTPUTSELECT
empty => transmitter_state_next.OUTPUTSELECT
empty => transmitter_state_next.OUTPUTSELECT
empty => transmitter_state_next.OUTPUTSELECT
empty => transmitter_state_next.OUTPUTSELECT
empty => transmitter_state_next.OUTPUTSELECT
empty => transmitter_state_next.DATAB
rd <= rd~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE


